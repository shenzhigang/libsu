// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'maven-publish'
apply plugin: 'java'

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0-alpha12'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}



task dlPackageList {
    outputs.upToDateWhen { false }
    /* Merge framework packages with AndroidX packages into the same list
     * so links to Android classes can work properly in Javadoc */
    rootProject.buildDir.mkdirs()
    new File(rootProject.buildDir, 'package-list').withOutputStream { out ->
        new URL('https://developer.android.com/reference/package-list')
                .withInputStream { is -> out << is }
        new URL('https://developer.android.com/reference/androidx/package-list')
                .withInputStream { is -> out << is }
    }
}

task javadoc(type: Javadoc, dependsOn: dlPackageList, overwrite: true) {
    failOnError false
    title = 'libsu API'
    exclude '**/internal/**'
    options.links('https://docs.oracle.com/javase/8/docs/api/')
    options.linksOffline 'https://developer.android.com/reference/', rootProject.buildDir.getPath()
    destinationDir = new File(rootProject.buildDir, 'javadoc')
    options.noDeprecated = true
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task install (dependsOn: publishToMavenLocal) {
    /* Force JitPack to build javadocJar and publish */
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact javadocJar
            groupId 'com.github.uhbnjiokm'
            artifactId 'docs'
        }
    }
}

subprojects {
    buildscript {
        repositories {
            google()
            jcenter()
        }
    }

    repositories {
        google()
        jcenter()
    }

    configurations {
        javadocDeps
    }

    afterEvaluate {
        android {
            compileSdkVersion 28
            buildToolsVersion '28.0.3'

            defaultConfig {
                if (minSdkVersion == null)
                    minSdkVersion 9
                targetSdkVersion 28
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }

        if (getPlugins().hasPlugin('com.android.library')) {

            rootProject.javadoc {
                source += android.sourceSets.main.java.sourceFiles
                classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
                classpath += configurations.javadocDeps
            }

            task sourcesJar(type: Jar) {
                archiveClassifier.set('sources')
                from android.sourceSets.main.java.sourceFiles
            }

            artifacts {
                archives sourcesJar
            }
        }
    }
}
